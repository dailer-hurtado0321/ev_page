{"version":3,"sources":["utils/config.js","components/styles/check.svg","utils/socketClient.js","components/checkoutform/index.js","components/credit/index.js","components/validatingStatus/index.js","components/validating/index.js","components/validate/index.js","components/scanning/index.js","components/scanselected/index.js","components/scan/index.js","components/home/index.js","components/main.js","components/profile.js","components/about.js","routes.js","App.js","serviceWorker.js","reducers/socketReducer.js","reducers/index.js","index.js"],"names":["exports","CONFIG","VERSION","HOST","REDIRECT_URI","module","SocketClient","isConnected","serverPath","keepConnection","callbacks","dispatch","console","log","_inst","this","url","socket","readyState","WebSocket","CLOSED","onopen","onOpen","onerror","onError","onclose","onClose","onmessage","onMessage","e","error","type","data","send","JSON","stringify","number","toString","replace","eventType","callback","push","filter","record","event","forEach","Date","toLocaleTimeString","getInstance","callProperCallback","EVENT","OPEN","response","ERROR","CLOSE","setTimeout","connect","MESSAGE","LOGOUT","LOGIN","CARD_OPTIONS","loadStripe","iconStyle","style","base","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","CardField","onChange","className","options","Field","label","id","placeholder","required","autoComplete","value","htmlFor","SubmitButton","processing","children","disabled","ErrorMessage","role","width","height","viewBox","fill","d","ResetButton","onClick","CheckoutForm","amount","useSelector","state","useDispatch","stripe","useStripe","elements","useElements","useState","setError","setCard","setProcessing","paymentSuccess","setPaymentSuccess","email","name","billingDetails","setBillingDetails","useEffect","payment_secret","confirmPayment","a","getElement","CardElement","confirmCardPayment","payment_method","card","billing_details","receipt_email","result","paymentIntent","status","tabId","handleSubmit","preventDefault","focus","onSubmit","target","message","stripePromise","Credit","props","setAmount","logout","localStorage","removeItem","window","location","reload","class","user","company_name","numberWithCommas","credits","fonts","cssSrc","ValidatingStatus","done","src","CheckIcon","Validating","queued","setQueued","greylist","setGreylist","reprocess","setReprocess","pipedrive","setPipedrive","finish","setFinish","current","setCurrent","GetTime","date","TimeType","hour","minutes","fullTime","getHours","getMinutes","validateProcessing","stage","percent","Validate","scanned_emails","scanned_persons","idToEmail","csv","Scanning","idOfFilter","scanedMail","setScanedMail","scanedPerson","setScanedPerson","allPesonsEmails","scanStatus","scanned","emails","invalid_emails","ignoredIds","page","fetch","method","mode","then","r","json","collectEmails","additional_data","pagination","more_items_in_collection","finishScanning","catch","person","indexOf","substr","first_name","last_name","display","margin","ScanSelected","filters","setFilters","setIdOfFilter","loggedIn","handleChange","scanSelected","filterList","length","map","item","i","key","Scan","Config","require","api_token","Home","loginattempt","setLoginattempt","isLoggingIn","document","href","includes","params","split","token","alert","Main","initWithDispatch","addEventListener","parse","secret","auth","setItem","access_token","encodeURIComponent","virtualDowloadLink","createElement","download","body","appendChild","click","removeChild","connection","Profile","Component","About","Routes","path","exact","component","to","App","componentDidMount","storage","web3","accounts","incidents","crowdsale","fund","Boolean","hostname","match","getItem","initialState","code","rootReducer","combineReducers","action","store","createStore","userHistory","history","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c182fe6b.chunk.js","sourcesContent":["exports.CONFIG = {\r\n    VERSION: '0.1.0',\r\n    HOST: '127.0.0.1',\r\n    REDIRECT_URI:'https://server.certalink.com'\r\n}\r\n\r\n// REDIRECT_URI:'https://server.certalink.com'\r\n// REDIRECT_URI:'https://localhost:3000'","module.exports = __webpack_public_path__ + \"static/media/check.8a113877.svg\";","/**\r\n * Websocket client class to communicate with node socket server running at *.*.*.*:8888\r\n */\r\n\r\nexport default class SocketClient {\r\n    /**\r\n     * static get instance method in singleton class\r\n     */\r\n    static _inst = null;\r\n    static getInstance() {\r\n        if (!SocketClient._inst) SocketClient._inst = new SocketClient();\r\n        return SocketClient._inst;\r\n    }\r\n    constructor() {\r\n        console.log('Socket client is created.');\r\n    }\r\n    static EVENT = {\r\n        OPEN: 'SOCKET_OPEN',\r\n        CLOSE: 'SOCKET_CLOSED',\r\n        ERROR: 'SOCKET_ERROR',\r\n        MESSAGE: 'SOCKET_MESSAGE',\r\n        LOGOUT: 'LOG_OUT', \r\n        LOGIN: 'LOG_IN'\r\n    };\r\n\r\n    isConnected = false;\r\n    serverPath = '';\r\n    keepConnection = true;\r\n    callbacks = [];\r\n    dispatch = null;\r\n\r\n    initWithDispatch(dispatch) {\r\n        this.dispatch = dispatch;\r\n    }\r\n    /**\r\n     * @summary connect to websocket server.\r\n     * @param {string} url\r\n     */\r\n    connect(url, keepConnection = true) {\r\n        this.serverPath = url;\r\n        this.keepConnection = keepConnection;\r\n        if (this.socket && this.socket.readyState !== WebSocket.CLOSED) {\r\n            console.log('Bad call to connect while client socket is running.');\r\n            return;\r\n        }\r\n        try {\r\n            this.socket = new WebSocket(url);\r\n            this.socket.onopen = this.onOpen;\r\n            this.socket.onerror = this.onError;\r\n            this.socket.onclose = this.onClose;\r\n            this.socket.onmessage = this.onMessage;\r\n            \r\n        } catch (e) {\r\n            console.error('Error in connecting server.', e);\r\n        }\r\n    }\r\n    /**\r\n     * @summary         Make JSON from type and data, convert it to string and send to server.\r\n     * @param {string} type\r\n     * @param {string} data\r\n     */\r\n    send(type, data) {\r\n        try {\r\n            this.socket.send(JSON.stringify({ type, data }));\r\n        } catch (e) {\r\n            console.error('Error in sending data to server.', e);\r\n        }\r\n    }\r\n\r\n      /**\r\n     * @summary         add comma by 3 digitsr.\r\n     * @param {number}   \r\n     * @param {function} \r\n     */\r\n    numberWithCommas(number) {\r\n        if(number > 999)\r\n            return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n        else\r\n            return number\r\n    }\r\n  \r\n    /**\r\n     * @summary         add event listener.\r\n     * @param {string}   eventType\r\n     * @param {function} callback\r\n     */\r\n    addEventListener(eventType, callback) {\r\n        this.callbacks.push({ eventType, callback });\r\n    }\r\n\r\n    /**\r\n     * @summary         remove event listener\r\n     * @param {string}  eventType\r\n     * @param {function} callback\r\n     */\r\n    removeEventListener(eventType, callback) {\r\n        this.callbacks = this.callbacks.filter((record) => record.eventType !== eventType || record.callback !== callback);\r\n    }\r\n    /**\r\n     * @summary         call every callback for specific event type. It will be called for all socket event\r\n     * @param {string} eventType\r\n     * @param {event} event\r\n     */\r\n    callProperCallback(eventType, event) {\r\n        this.callbacks.forEach((record) => {\r\n            if (record.eventType === eventType) record.callback(event);\r\n        });\r\n    }\r\n    // Socket event listeners\r\n    /**\r\n     * @summary callback of socket \"onopen\" event\r\n     * @param {*} event socket event\r\n     */\r\n    onOpen(event) {\r\n        console.log('Socket is opend.', new Date().toLocaleTimeString());\r\n        // setSocketConnection('true')\r\n        SocketClient.getInstance().isConnected = true;\r\n        SocketClient.getInstance().callProperCallback(SocketClient.EVENT.OPEN, event);\r\n        SocketClient.getInstance().dispatch({type:'SOCKET_CONNECTION', response: SocketClient.getInstance().isConnected})\r\n    }\r\n    /**\r\n     * @summary callback of socket \"onopen\" event\r\n     * @param {*} event socket event\r\n     */\r\n    onError(event) {\r\n        console.log('Socket error.');\r\n        SocketClient.getInstance().isConnected = false;\r\n        SocketClient.getInstance().callProperCallback(SocketClient.EVENT.ERROR, event);\r\n        SocketClient.getInstance().dispatch({type:'SOCKET_CONNECTION', response: SocketClient.getInstance().isConnected})\r\n    }\r\n    /**\r\n     * @summary callback of socket \"onopen\" event\r\n     * @param {*} event socket event\r\n     */\r\n    onClose(event) {\r\n        console.log('Socket is closed.');\r\n        // alert('socket close')\r\n        SocketClient.getInstance().isConnected = false;\r\n        SocketClient.getInstance().dispatch({type:'SOCKET_CONNECTION', response: SocketClient.getInstance().isConnected})\r\n        SocketClient.getInstance().callProperCallback(SocketClient.EVENT.CLOSE, event);\r\n        // if keepConnection is true, it will try to reconnect on every time of socket close.\r\n\r\n        if (SocketClient.getInstance().keepConnection)\r\n            setTimeout(() => SocketClient.getInstance().connect(SocketClient.getInstance().serverPath, true), 5000);\r\n    }\r\n    /**\r\n     * @summary callback of socket \"onopen\" event\r\n     * @param {*} event socket event\r\n     */\r\n    onMessage(event) {\r\n        console.log('Socket message.', SocketClient.EVENT.MESSAGE);\r\n        SocketClient.getInstance().callProperCallback(SocketClient.EVENT.MESSAGE, event);\r\n    }\r\n}\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  Elements,\r\n  CardElement,\r\n  useElements,\r\n  useStripe,\r\n  CardNumberElement,\r\n  CardExpiryElement,\r\n  CardCvcElement,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport SocketClient from \"../../utils/socketClient\";\r\n// import \"./style.css\";\r\n\r\nconst api_token = \"cc638af3ea2783059aae7e32b5b80e34c1f0d1f4\";\r\n// stripe = Stripe('pk_live_3LlO84dRneuvLT4cRNrqNI1a00zer0Zu1K');\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51GsJaTENKR3DelSmluW4kP0QbP1fldW9sVMuegxwyMbmBt7yduvqb3Y0uvvNyZv9Da3gLS5o8iv25LSGvGOWYxDk009lbSNn9f\"\r\n);\r\nconst CARD_OPTIONS = {\r\n  iconStyle: \"solid\",\r\n  style: {\r\n    base: {\r\n      iconColor: \"#c4f0ff\",\r\n      color: \"#fff\",\r\n      fontWeight: 500,\r\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\r\n      fontSize: \"16px\",\r\n      fontSmoothing: \"antialiased\",\r\n      \":-webkit-autofill\": {\r\n        color: \"#fce883\",\r\n      },\r\n      \"::placeholder\": {\r\n        color: \"#87bbfd\",\r\n      },\r\n    },\r\n    invalid: {\r\n      iconColor: \"#ffc7ee\",\r\n      color: \"#ffc7ee\",\r\n    },\r\n  },\r\n};\r\n\r\nconst CardField = ({ onChange }) => (\r\n  <div className=\"FormRow\">\r\n    <CardElement options={CARD_OPTIONS} onChange={onChange} />\r\n  </div>\r\n);\r\n\r\nconst Field = ({\r\n  label,\r\n  id,\r\n  type,\r\n  placeholder,\r\n  required,\r\n  autoComplete,\r\n  value,\r\n  onChange,\r\n}) => (\r\n  <div className=\"FormRow\">\r\n    <label htmlFor={id} className=\"FormRowLabel\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      className=\"FormRowInput\"\r\n      id={id}\r\n      type={type}\r\n      placeholder={placeholder}\r\n      required={required}\r\n      autoComplete={autoComplete}\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </div>\r\n);\r\n\r\nconst SubmitButton = ({ processing, error, children, disabled }) => (\r\n  <button\r\n    className={`SubmitButton ${error ? \"SubmitButton--error\" : \"\"}`}\r\n    type=\"submit\"\r\n    disabled={processing || disabled}\r\n  >\r\n    {processing ? \"Processing...\" : children}\r\n  </button>\r\n);\r\n\r\nconst ErrorMessage = ({ children }) => (\r\n  <div className=\"ErrorMessage\" role=\"alert\">\r\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 17 17\">\r\n      <path\r\n        fill=\"#FFF\"\r\n        d=\"M8.5,17 C3.80557963,17 0,13.1944204 0,8.5 C0,3.80557963 3.80557963,0 8.5,0 C13.1944204,0 17,3.80557963 17,8.5 C17,13.1944204 13.1944204,17 8.5,17 Z\"\r\n      />\r\n      <path\r\n        fill=\"#6772e5\"\r\n        d=\"M8.5,7.29791847 L6.12604076,4.92395924 C5.79409512,4.59201359 5.25590488,4.59201359 4.92395924,4.92395924 C4.59201359,5.25590488 4.59201359,5.79409512 4.92395924,6.12604076 L7.29791847,8.5 L4.92395924,10.8739592 C4.59201359,11.2059049 4.59201359,11.7440951 4.92395924,12.0760408 C5.25590488,12.4079864 5.79409512,12.4079864 6.12604076,12.0760408 L8.5,9.70208153 L10.8739592,12.0760408 C11.2059049,12.4079864 11.7440951,12.4079864 12.0760408,12.0760408 C12.4079864,11.7440951 12.4079864,11.2059049 12.0760408,10.8739592 L9.70208153,8.5 L12.0760408,6.12604076 C12.4079864,5.79409512 12.4079864,5.25590488 12.0760408,4.92395924 C11.7440951,4.59201359 11.2059049,4.59201359 10.8739592,4.92395924 L8.5,7.29791847 L8.5,7.29791847 Z\"\r\n      />\r\n    </svg>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nconst ResetButton = ({ onClick }) => (\r\n  <button type=\"button\" className=\"ResetButton\" onClick={onClick}>\r\n    <svg width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\">\r\n      <path\r\n        fill=\"#FFF\"\r\n        d=\"M15,7.05492878 C10.5000495,7.55237307 7,11.3674463 7,16 C7,20.9705627 11.0294373,25 16,25 C20.9705627,25 25,20.9705627 25,16 C25,15.3627484 24.4834055,14.8461538 23.8461538,14.8461538 C23.2089022,14.8461538 22.6923077,15.3627484 22.6923077,16 C22.6923077,19.6960595 19.6960595,22.6923077 16,22.6923077 C12.3039405,22.6923077 9.30769231,19.6960595 9.30769231,16 C9.30769231,12.3039405 12.3039405,9.30769231 16,9.30769231 L16,12.0841673 C16,12.1800431 16.0275652,12.2738974 16.0794108,12.354546 C16.2287368,12.5868311 16.5380938,12.6540826 16.7703788,12.5047565 L22.3457501,8.92058924 L22.3457501,8.92058924 C22.4060014,8.88185624 22.4572275,8.83063012 22.4959605,8.7703788 C22.6452866,8.53809377 22.5780351,8.22873685 22.3457501,8.07941076 L22.3457501,8.07941076 L16.7703788,4.49524351 C16.6897301,4.44339794 16.5958758,4.41583275 16.5,4.41583275 C16.2238576,4.41583275 16,4.63969037 16,4.91583275 L16,7 L15,7 L15,7.05492878 Z M16,32 C7.163444,32 0,24.836556 0,16 C0,7.163444 7.163444,0 16,0 C24.836556,0 32,7.163444 32,16 C32,24.836556 24.836556,32 16,32 Z\"\r\n      />\r\n    </svg>\r\n  </button>\r\n);\r\nconst CheckoutForm = ({ amount }) => {\r\n  const socket = useSelector((state) => state.socket);\r\n  const dispatch = useDispatch();\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [error, setError] = useState(null);\r\n  const [card, setCard] = useState({});\r\n  const [processing, setProcessing] = useState(false);\r\n  const [paymentSuccess, setPaymentSuccess] = useState(null);\r\n  // const [billingDetails, setBillingDetails] = useState({\r\n  //   email: \"\",\r\n  //   phone: \"\",\r\n  //   name: \"\",\r\n  // });\r\n  const [billingDetails, setBillingDetails] = useState({\r\n    email: \"\",\r\n    name: \"\",\r\n  });\r\n  useEffect(() => {\r\n    if (socket.payment_secret) {\r\n      confirmPayment(socket.payment_secret);\r\n    }\r\n  });\r\n\r\n  const confirmPayment = async (payment_secret) => {\r\n    console.log(\"before paymentSuccess\", payment_secret, billingDetails.name,  elements.getElement(CardElement),);\r\n    const result = await stripe.confirmCardPayment(payment_secret, {\r\n      payment_method: {\r\n        card:  elements.getElement(CardElement),\r\n        billing_details: {\r\n          name: billingDetails.name,\r\n        },\r\n      }, receipt_email: billingDetails.email,\r\n    });\r\n\r\n    // remove the one secret of payment\r\n    dispatch({ type: \"PAYMENT\", response: null });\r\n    if (result.error) {\r\n      console.log(\"result-error\", result.error);\r\n      setError(result.error);\r\n    } else if (result.paymentIntent.status === \"succeeded\") {\r\n      console.log(\"result-paymentSuccess\", result.paymentIntent);\r\n      console.log(\"email to send payment\", socket.status.email);\r\n      SocketClient.getInstance().send(\"paymentSuccess\", {\r\n        paymentIntent: result.paymentIntent,\r\n        email:socket.status.email,\r\n        tabId: 1,\r\n      });\r\n      setPaymentSuccess(result.paymentIntent);\r\n    }\r\n  };\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not loaded yet. Make sure to disable\r\n      // form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    if (error) {\r\n      elements.getElement(\"card\").focus();\r\n      return;\r\n    }\r\n\r\n    SocketClient.getInstance().send(\"payment\", { amount: amount, tabId: 1 });\r\n\r\n    // if (cardComplete) {\r\n    //   setProcessing(true);\r\n    // }\r\n    // console.log(\"before payload\", billingDetails)\r\n    setCard(elements.getElement(CardElement))\r\n    console.log('elements.getElement(CardElement)', elements.getElement(CardElement))\r\n    // alert('setcard')\r\n    // const payload = await stripe.createPaymentMethod({\r\n    //   type: \"card\",\r\n    //   card: elements.getElement(CardElement),\r\n    //   billing_details: billingDetails,\r\n    // });\r\n\r\n    // console.log(\"payload\", payload  )\r\n    // setProcessing(false);\r\n\r\n    // if (payload.error) {\r\n    //   setError(payload.error);\r\n    // } else {\r\n    //   setPaymentMethod(payload.paymentMethod);\r\n    // }\r\n  };\r\n\r\n  const reset = () => {\r\n    setError(null);\r\n    setProcessing(false);\r\n    setPaymentSuccess(null);\r\n    // setBillingDetails({\r\n    //   email: \"\",\r\n    //   phone: \"\",\r\n    //   name: \"\",\r\n    // });\r\n    setBillingDetails({\r\n      email: \"\",\r\n      name: \"\",\r\n    });\r\n  };\r\n\r\n  return paymentSuccess ? (\r\n    <div className=\"Result\">\r\n      <div className=\"ResultTitle\" role=\"alert\">\r\n        Payment successful\r\n      </div>\r\n      <div className=\"ResultMessage\"></div>\r\n      <ResetButton onClick={reset} />\r\n    </div>\r\n  ) : (\r\n    <form className=\"Form\" onSubmit={handleSubmit}>\r\n      <fieldset className=\"FormGroup\">\r\n        <Field\r\n          label=\"Name\"\r\n          id=\"name\"\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          required\r\n          autoComplete=\"name\"\r\n          value={billingDetails.name}\r\n          onChange={(e) => {\r\n            setBillingDetails({ ...billingDetails, name: e.target.value });\r\n          }}\r\n        />\r\n        <Field\r\n          label=\"Email\"\r\n          id=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          autoComplete=\"email\"\r\n          value={billingDetails.email}\r\n          onChange={(e) => {\r\n            setBillingDetails({ ...billingDetails, email: e.target.value });\r\n          }}\r\n        />\r\n        {/* <Field\r\n          label=\"Phone\"\r\n          id=\"phone\"\r\n          type=\"tel\"\r\n          placeholder=\"(941) 555-0123\"\r\n          required\r\n          autoComplete=\"tel\"\r\n          value={billingDetails.phone}\r\n          onChange={(e) => {\r\n            setBillingDetails({ ...billingDetails, phone: e.target.value });\r\n          }}\r\n        /> */}\r\n      </fieldset>\r\n      <fieldset className=\"FormGroup\">\r\n        <CardField\r\n          onChange={(e) => {\r\n            setError(e.error);\r\n            // setCardComplete(e.complete);\r\n          }}\r\n        />\r\n      </fieldset>\r\n      {error && <ErrorMessage>{error.message}</ErrorMessage>}\r\n      <SubmitButton processing={processing} error={error} disabled={!stripe}>\r\n        Purchage {amount}Credits\r\n      </SubmitButton>\r\n    </form>\r\n  );\r\n};\r\nexport default CheckoutForm;\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Elements, CardElement } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport SocketClient from \"../../utils/socketClient\";\r\nimport CheckoutForm from \"../checkoutform\";\r\nimport \"./style.css\";\r\n\r\nconst api_token = \"cc638af3ea2783059aae7e32b5b80e34c1f0d1f4\";\r\n// stripe = Stripe('pk_live_3LlO84dRneuvLT4cRNrqNI1a00zer0Zu1K');\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51GsJaTENKR3DelSmluW4kP0QbP1fldW9sVMuegxwyMbmBt7yduvqb3Y0uvvNyZv9Da3gLS5o8iv25LSGvGOWYxDk009lbSNn9f\"\r\n);\r\n\r\nconst Credit = ({ props }) => {\r\n  const dispatch = useDispatch();\r\n  const [amount, setAmount] = useState(1000);\r\n\r\n  useEffect(() => {}, []);\r\n  const socket = useSelector((state) => state.socket);\r\n  function handleChange(e) {\r\n    setAmount(e.target.value);\r\n  }\r\n  const logout = () => {\r\n    localStorage.removeItem(\"loggedIn\");\r\n    localStorage.removeItem(\"user\");\r\n    localStorage.removeItem(\"access_token\");\r\n    localStorage.removeItem(\"status\");\r\n    window.location.reload();\r\n  };\r\n  const ELEMENTS_OPTIONS = {\r\n    fonts: [\r\n      {\r\n        cssSrc: \"https://fonts.googleapis.com/css?family=Roboto\",\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div class=\"mt-4 box\">\r\n          <a onClick={logout}>\r\n            <button class=\"logoutButton\" onClick={logout}>\r\n              LOGOUT\r\n            </button>\r\n          </a>\r\n        </div>\r\n        <div class=\"mt-4 box\">\r\n          <b>Pipedrive User: </b>\r\n          <p>{socket.user.name}</p>\r\n          <p>{socket.user.email}</p>\r\n          <p>{socket.user.company_name}</p>\r\n          <p>Credits: {SocketClient.getInstance().numberWithCommas(socket.credits)}</p>\r\n        </div>\r\n\r\n        {/* <button class=\"mt-4\" style={{background: '#54807e', color: 'white'}}> BUY MORE CREDITS</button> */}\r\n      </div>\r\n\r\n      <div class=\"box mt-4\">\r\n        <select\r\n          value={amount}\r\n          onChange={handleChange}\r\n          style={{ width: \"100%\" }}\r\n        >\r\n          <option value=\"1000\">1,000 credits for US $8</option>\r\n          <option value=\"5000\">5,000 credits for US $39</option>\r\n          <option value=\"25000\">25,000 credits for US $169</option>\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <Elements stripe={stripePromise} options={ELEMENTS_OPTIONS}>\r\n          <CheckoutForm amount={amount} />\r\n        </Elements>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Credit;\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport CheckIcon from \"../styles/check.svg\";\r\nconst ValidatingStatus = ({done, status}) => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    //  alert(scanedPerson);\r\n    /**\r\n     * if not found emails redirect scan seleted page with email not found message\r\n     */\r\n\r\n  }, []);\r\n  const validate = () => {\r\n    // SocketClient.getInstance().send('validate', { csv, email: message.data, idToEmail });\r\n  };\r\n  // const socket = useSelector((state) => state.socket);\r\n  // console.log(\"socket finish catch\", socket);\r\n  return (\r\n    <div>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-3 \">\r\n          {done? \r\n          <img src={CheckIcon} />:\"\"}\r\n        </div>\r\n        <div class=\"col-sm-9 \">\r\n          <p>{status}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ValidatingStatus;\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport ValidatingStatus from \"../validatingStatus\";\r\n\r\nconst Validating = () => {\r\n  const dispatch = useDispatch();\r\n  const [queued, setQueued] = useState(false);\r\n\r\n  // zerobounce checking\r\n  const [processing, setProcessing] = useState(false);\r\n  const [greylist, setGreylist] = useState(false);\r\n  const [reprocess, setReprocess] = useState(false);\r\n\r\n  // updating pipedrive after zerobounce\r\n  const [pipedrive, setPipedrive] = useState(false);\r\n  const [finish, setFinish] = useState(false);\r\n  const [current, setCurrent] = useState('');\r\n  useEffect(() => {\r\n    GetTime();\r\n  }, []);\r\n\r\n  const GetTime = () => {\r\n    var date, TimeType, hour, minutes, seconds, fullTime;\r\n     // Creating Date() function object.\r\n     date = new Date();\r\n\r\n     // Getting current hour from Date object.\r\n     hour = date.getHours(); \r\n \r\n     // Checking if the Hour is less than equals to 11 then Set the Time format as AM.\r\n     if(hour <= 11)\r\n     {\r\n \r\n       TimeType = 'AM';\r\n \r\n     }\r\n     else{\r\n \r\n       // If the Hour is Not less than equals to 11 then Set the Time format as PM.\r\n       TimeType = 'PM';\r\n \r\n     }\r\n \r\n \r\n     // IF current hour is grater than 12 then minus 12 from current hour to make it in 12 Hours Format.\r\n     if( hour > 12 )\r\n     {\r\n       hour = hour - 12;\r\n     }\r\n  \r\n     // If hour value is 0 then by default set its value to 12, because 24 means 0 in 24 hours time format. \r\n     if( hour == 0 )\r\n     {\r\n         hour = 12;\r\n     } \r\n \r\n \r\n     // Getting the current minutes from date object.\r\n     minutes = date.getMinutes();\r\n \r\n     // Checking if the minutes value is less then 10 then add 0 before minutes.\r\n     if(minutes < 10)\r\n     {\r\n       minutes = '0' + minutes.toString();\r\n     }\r\n     fullTime = hour.toString() + ':' + minutes.toString() + ':' +  TimeType.toString();\r\n     setCurrent(fullTime)\r\n  };\r\n  const socket = useSelector((state) => state.socket);\r\n  console.log(\"socket finish catch\", socket);\r\n\r\n  // if(socket.validateProcessing.status === \"Processing\"){\r\n  //   setQueued(true)\r\n  //   setProcessing( socket.validateProcessing.percent)\r\n  // } else if(socket.validateProcessing.status === \"update_pipedrive\"){\r\n  //   setProcessing(true)\r\n  //   setPipedrive( socket.validateProcessing.percent)\r\n  // }\r\n\r\n  if (socket.validateProcessing.status === \"Processing\" && !queued) {\r\n    setQueued(true);\r\n    //   setProcessing( socket.validateProcessing.percent)\r\n  } else if (socket.validateProcessing.status === \"update_pipedrive\") {\r\n    if(!processing)\r\n      setProcessing(true);\r\n    if(!reprocess)\r\n      setReprocess(true)\r\n    if(!greylist)\r\n      setGreylist(true)\r\n    // setPipedrive( socket.validateProcessing.percent)\r\n  } \r\n  if (socket.stage === \"finished\") {\r\n    if (!queued) setQueued(true);\r\n    if (!processing) setProcessing(true);\r\n    if (!greylist) setGreylist(true);\r\n    if (!reprocess) setReprocess(true);\r\n    if (!pipedrive) setPipedrive(true);\r\n    if (!finish) setFinish(true);\r\n  }\r\n\r\n  // if(socket.validateProcessing.status === \"update_pipedrive\"){\r\n  //   setProcessing(true)\r\n  //   setPipedrive( socket.validateProcessing.percent)\r\n\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <h3>Email Validation</h3>\r\n\r\n      <div class=\"mt-4 box\">\r\n        <b>Validation stated at {current}</b>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <ValidatingStatus done={true} status={\"File Uploaded\"} />\r\n        <ValidatingStatus done={queued} status={\"Queued\"} />\r\n        <ValidatingStatus\r\n          done={processing}\r\n          status={\r\n            processing\r\n              ? \"Processing\"\r\n              : `Processing(${socket.validateProcessing.percent})`\r\n          }\r\n        />\r\n        <ValidatingStatus\r\n          done={reprocess}\r\n          status={\"Anti-Greylist\"}\r\n        />\r\n         {/* <ValidatingStatus\r\n          done={reprocess}\r\n          status={\"Anti-Greylist(Waiting x minutes)\"}\r\n        /> */}\r\n        <ValidatingStatus done={reprocess} status={\"Re-processing\"} />\r\n        {/* <ValidatingStatus done={false} status={\"Email checks complete\"} /> */}\r\n        {processing ? (\r\n          <ValidatingStatus\r\n            done={pipedrive}\r\n            status={\r\n              pipedrive\r\n                ? \"Updating Pipedrive\"\r\n                : `Updating Pipedrive(${socket.validateProcessing.percent} %)`\r\n            }\r\n          />\r\n        ) : (\r\n          <ValidatingStatus done={pipedrive} status={\"Updating Pipedrive\"} />\r\n        )}\r\n\r\n        <ValidatingStatus done={finish} status={\"Email validation complete\"} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Validating;\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport SocketClient from \"../../utils/socketClient\";\r\n// import \"./style.css\";\r\nimport Validating from \"../validating\";\r\nconst api_token = \"cc638af3ea2783059aae7e32b5b80e34c1f0d1f4\";\r\nconst Validate = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    //  alert(scanedPerson);\r\n    /**\r\n     * if not found emails redirect scan seleted page with email not found message\r\n     */\r\n    if (socket.scanned_emails == 0)\r\n      dispatch({ type: \"SET_STAGE\", response: \"email_not_found\" });\r\n  }, []);\r\n  const validate = () => {\r\n    // SocketClient.getInstance().send('validate', { csv, email: message.data, idToEmail });\r\n\r\n    console.log(\"validate idtoemail\", socket.idToEmail)\r\n    SocketClient.getInstance().send(\"validate\", {\r\n      csv: socket.csv,\r\n      email: socket.email,\r\n      idToEmail: socket.idToEmail,\r\n      scanned_persons: socket.scanned_persons\r\n    });\r\n\r\n    dispatch({ type: \"SET_STAGE\", response: \"validating\" });\r\n  };\r\n  const socket = useSelector((state) => state.socket);\r\n  return (\r\n    <div>\r\n      <h3>Scanned</h3>\r\n\r\n      <div class=\"mt-4 box\">\r\n          <b>Person scanned: </b>{SocketClient.getInstance().numberWithCommas(socket.scanned_persons)}\r\n      </div>\r\n\r\n      <div class=\"mt-4 box\">\r\n          <b>Unique emails: </b>{SocketClient.getInstance().numberWithCommas(socket.scanned_emails)}\r\n      </div>\r\n    \r\n      <div class=\"box mt-4\">\r\n        {/* <button onClick={scanSelected}><i class=\"fa fa-search mr-3\"></i>Scan Selected</button> */}\r\n        <button onClick={validate}>Validate Emails</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Validate;\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport SocketClient from \"../../utils/socketClient\";\r\nimport Loader from \"react-loader-spinner\";\r\n// import \"./style.css\";\r\nimport Validate from \"../validate\";\r\nconst api_token = \"cc638af3ea2783059aae7e32b5b80e34c1f0d1f4\";\r\nconst Scanning = ({ idOfFilter }) => {\r\n  const dispatch = useDispatch();\r\n  const [scanedMail, setScanedMail] = useState(0);\r\n  const [scanedPerson, setScanedPerson] = useState(0);\r\n  useEffect(() => {\r\n    if (socket.stage === \"scanning\") allPesonsEmails(0, idOfFilter);\r\n  }, []);\r\n\r\n  const socket = useSelector((state) => state.socket);\r\n\r\n  let scanStatus = {\r\n    message: \"starting scaning\",\r\n    scanned: 0,\r\n    emails: 0,\r\n    invalid_emails: 0,\r\n  };\r\n\r\n  let ignoredIds = {};\r\n  let emails = {};\r\n  let ids = [];\r\n  let csv = \"\";\r\n  let idToEmail = {};\r\n  let invalid_emails = {};\r\n\r\n  const scanSelected = () => {\r\n    // state is scanning emails\r\n    // alert(idOfFilter)\r\n\r\n    emails = {};\r\n    ignoredIds = {};\r\n    idToEmail = {};\r\n\r\n    ids = [];\r\n    csv = \"\";\r\n    invalid_emails = {};\r\n    scanStatus = {\r\n      message: \"starting scanning\",\r\n      scanned: 0,\r\n      emails: 0,\r\n      invalid_emails: 0,\r\n    };\r\n    // console.log('start scan mail', { isSelected, isInverted });\r\n    console.log(\"start scan mail\", idOfFilter);\r\n    allPesonsEmails(0, idOfFilter);\r\n  };\r\n\r\n  function allPesonsEmails(page = 0, filter) {\r\n    console.log(\"allPesonsEmails\", { page, filter });\r\n    fetch(\r\n      `https://api.pipedrive.com/v1/persons?filter_id=${filter}&start=${page}&api_token=${api_token}&limit=100`,\r\n      {\r\n        method: \"GET\",\r\n        mode: \"cors\",\r\n      }\r\n    )\r\n      .then((r) => r.json())\r\n      .then((data) => {\r\n        collectEmails(data.data);\r\n        data.additional_data.pagination.more_items_in_collection\r\n          ? allPesonsEmails(page + 100, filter)\r\n          : finishScanning();\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n        // chrome.storage.local.set({ state: \"noEmailsFound\" });\r\n        console.log(\"noEmailFound\");\r\n      });\r\n    // chrome.storage.local.set({\r\n    //   scanning: `${scanStatus.scanned} persons scanned, ${scanStatus.emails} unique emails found`,\r\n    // });\r\n  }\r\n\r\n  function collectEmails(data) {\r\n    if (data != null && data[0]) {\r\n      console.log(\"collectEmails\", data);\r\n      data.forEach((person) => {\r\n        if (!ignoredIds[person.id]) {\r\n          scanStatus.scanned++;\r\n          setScanedPerson(scanStatus.scanned);\r\n          if (person.email[0] && person.email[0].value) {\r\n            idToEmail[person.id] = [];\r\n            person.email.forEach((email) => {\r\n              // Add valid email list\r\n              if (email.value.indexOf(\",\") == -1) {\r\n                idToEmail[person.id].push(email.value);\r\n                \r\n                if (!emails[email.value]) {\r\n                  scanStatus.emails++;\r\n                  setScanedMail(scanStatus.emails);\r\n                  emails[email.value] = 1;\r\n\r\n                  if (email.value.indexOf(\"(\") > 0)\r\n                    csv += `\\n${email.value.substr(\r\n                      0,\r\n                      email.value.indexOf(\"(\")\r\n                    )},${person.first_name},${person.last_name}`;\r\n                  else\r\n                    csv += `\\n${email.value},${person.first_name},${person.last_name}`;\r\n\r\n                } else {\r\n                  emails[email.value]++;\r\n                }\r\n              }\r\n              // InValid Email\r\n              else {\r\n                if (!invalid_emails[email.value]) {\r\n                  scanStatus.invalid_emails++;\r\n                  invalid_emails[email.value] = 1;\r\n                } else {\r\n                  invalid_emails[email.value]++;\r\n                }\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n      console.log(\"emails\", emails);\r\n      console.log(\"scanStatusemails\", scanStatus.emails);\r\n      console.log(\"canStatus.scanned\", scanStatus.scanned);\r\n      console.log(\"scanStatusinvalid_emails\", scanStatus.invalid_emails);\r\n\r\n      // chrome.storage.local.set({\r\n      //     scanning: `${scanStatus.scanned} persons scanned, ${scanStatus.emails} unique emails found`\r\n      // });\r\n      // scanStatus.message = `${scanStatus.scanned} persons scanned, ${scanStatus.emails} unique emails found`;\r\n    }\r\n  }\r\n  const finishScanning = () => {\r\n    setScanedPerson(scanStatus.scanned);\r\n    setScanedMail(scanStatus.emails);\r\n    console.log(\"scan finished\", scanStatus.emails, scanStatus.scanned);\r\n    console.log(\"scan scanedMail\", scanedMail);\r\n\r\n    dispatch({\r\n      type: \"SET_VALIDATE\",\r\n      response: {\r\n        scanned_persons: scanStatus.scanned,\r\n        scanned_emails: scanStatus.emails,\r\n        csv: csv,\r\n        idToEmail: idToEmail,\r\n        email: socket.user.email,\r\n      },\r\n    });\r\n    dispatch({ type: \"SET_STAGE\", response: \"scan_finished\" });\r\n\r\n    // chrome.storage.local.set({ state: 'success', stateData: csv });\r\n  };\r\n  const closeScanning = () => {\r\n    dispatch({ type: \"SET_STAGE\", response: \"scan_finished\" });\r\n  };\r\n  return (\r\n    <div>\r\n      {/* stage is scan_finished, redirect to Validate page,\r\n          if not, display the scanning result.\r\n      */}\r\n      {socket.stage === \"scan_finished\" ? (\r\n        <Validate />\r\n      ) : (\r\n        <>\r\n          <div style={{ display: \"flex  \" }}>\r\n            <h3 style={{ margin: \"auto 20px \" }}>Scanning</h3>{\" \"}\r\n              <Loader type=\"ThreeDots\" color=\"#e07b12\" height=\"80\" width=\"80\" />\r\n          </div>\r\n          <div class=\"mt-4 box\">\r\n              <b>Person scanned: </b>\r\n              {SocketClient.getInstance().numberWithCommas(scanedPerson)}\r\n          </div>\r\n          <div class=\"mt-4 box\">\r\n              <b>Unique emails: </b>\r\n              {SocketClient.getInstance().numberWithCommas(scanedMail)}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scanning;\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport SocketClient from \"../../utils/socketClient\";\r\n// import \"./style.css\";\r\nimport Scanning from \"../scanning\";\r\nimport ScanSelect from \"../scan\";\r\nimport Validating from \"../validating\";\r\nconst api_token = \"cc638af3ea2783059aae7e32b5b80e34c1f0d1f4\";\r\nconst ScanSelected = ({ props }) => {\r\n  const dispatch = useDispatch();\r\n  const [filters, setFilters] = useState([]);\r\n  // const [status, setStatus] = useState('');\r\n  const [idOfFilter, setIdOfFilter] = useState(0);\r\n  useEffect(() => {\r\n    /** Get Filters from Pipedrive */\r\n    if (socket.loggedIn) {\r\n      fetch(\r\n        `https://api.pipedrive.com/v1/filters?type=people&api_token=${api_token}`,\r\n        {\r\n          method: \"GET\",\r\n          mode: \"cors\",\r\n        }\r\n      )\r\n        .then((r) => r.json())\r\n        .then((data) => {\r\n          console.log(data.data)\r\n          setFilters(data.data);\r\n          setFilters((state) => [{ id: 0, name: \"All Contacts\" }, ...state]);\r\n          // collectEmails(data.data);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const socket = useSelector((state) => state.socket);\r\n\r\n  function handleChange(e) {\r\n    setIdOfFilter(e.target.value);\r\n  }\r\n  let scanStatus = {\r\n    message: \"starting scaning\",\r\n    scanned: 0,\r\n    emails: 0,\r\n    invalid_emails: 0,\r\n  };\r\n\r\n  const scanSelected = () => {\r\n    /**Click Scan Selected Button, Current Stage is scanning */\r\n    dispatch({ type: \"SET_STAGE\", response: \"scanning\" });\r\n    // state is scanning emails\r\n  };\r\n\r\n  let filterList =\r\n    filters.length > 0 &&\r\n    filters.map((item, i) => {\r\n      return (\r\n        <option key={i} value={item.id}>\r\n          {item.name}\r\n        </option>\r\n      );\r\n    }, this);\r\n\r\n  return (\r\n    <div class='mt-4'>\r\n      {/* Redirect Scanning page with Filter ID when button clicked(stage is scanning)  */}\r\n      {socket.stage === \"scanning\" && <Scanning idOfFilter={idOfFilter} />}\r\n\r\n      {/* Redirect Scanning page with Filter ID when button clicked(stage is scanning)  */}\r\n      {socket.stage === \"validating\" && <Validating />}\r\n\r\n      {/* Redirect Scanning page with Filter ID when button clicked(stage is scanning)  */}\r\n      {socket.stage === \"finished\" && <Validating />}\r\n\r\n      {/*In Scanning, redirect to Validate after scan_finished. */}\r\n      {socket.stage === \"scan_finished\" && <Scanning />}\r\n\r\n      {/* current page, stage  */}\r\n      {socket.stage === \"selected\" && (\r\n        <div>\r\n          <div>\r\n            Choose \"All Contacts\" or select a filter to check\r\n          </div>\r\n          <div class=\"box\">\r\n            <select class=\"mt-2\" value={idOfFilter} onChange={handleChange}>\r\n              {filterList}\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"mt-4\">\r\n            Contacts might have than one email or duplicates. Before we can\r\n            continue we need to find all of them. This usually takes less than a\r\n            minute.\r\n          </div>\r\n\r\n          <div class=\"box\">\r\n            <button onClick={scanSelected}><i class=\"fa fa-search mr-3\"></i>Scan Selected</button>\r\n          </div>\r\n          \r\n\r\n          {/* <div class=\"box\">\r\n            <button class=\"mt-4\" onClick={scanSelected}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"24\"\r\n                height=\"24\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                stroke=\"#657789\"\r\n                class=\"feather feather-search\"\r\n              >\r\n                <circle cx=\"11\" cy=\"11\" r=\"8\" />\r\n                <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\" />\r\n              </svg>\r\n              SCAN SELECTED\r\n            </button>\r\n          </div> */}\r\n\r\n        </div>\r\n      )}\r\n\r\n      {/* not email found show the error(red) messge */}\r\n      {socket.stage === \"email_not_found\" && (\r\n        <div>\r\n          <div class=\"mt-4\" style={{ color: \"red\" }}>\r\n            Emails Not Founded with Seleted Filter. Try again.\r\n          </div>\r\n          <div>\r\n            Choose \"All Contacts\" or select a filter to check\r\n          </div>\r\n          <div class=\"box\">\r\n            <select class=\"mt-2\" value={idOfFilter} onChange={handleChange}>\r\n              {filterList}\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"mt-4\">\r\n            Contacts might have than one email or duplicates. Before we can\r\n            continue we need to find all of them. This usually takes less than a\r\n            minute.\r\n          </div>\r\n\r\n          <div class=\"box\">\r\n            <button onClick={scanSelected}><i class=\"fa fa-search mr-3\"></i>Scan Selected</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ScanSelected;\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport SocketClient from \"../../utils/socketClient\";\r\n// import \"./style.css\";\r\nimport Scanning from \"../scanning\";\r\nimport ScanSelected from \"../scanselected\";\r\nconst api_token = \"cc638af3ea2783059aae7e32b5b80e34c1f0d1f4\";\r\nconst Scan = ({ props }) => {\r\n  useEffect(() => {\r\n  }, []);\r\n\r\n  const socket = useSelector((state) => state.socket);\r\n  return (\r\n    <div>\r\n      {/* {socket.stage === 'selected' && <ScanSelected/>} */}\r\n      {/* {socket.stage === 'scanning' && <Scanning idOfFilter={idOfFilter}/>} */}\r\n      <ScanSelected/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scan;\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport SocketClient from \"../../utils/socketClient\";\r\nimport Credit from \"../credit\";\r\nimport Scan from \"../scan\";\r\nimport \"./style.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst Config = require(\"../../utils/config\");\r\nconst api_token = \"cc638af3ea2783059aae7e32b5b80e34c1f0d1f4\";\r\n\r\nconst Home = ({ props }) => {\r\n  const [loginattempt, setLoginattempt] = useState(false);\r\n  const socket = useSelector((state) => state.socket);\r\n\r\n  const dispatch = useDispatch();\r\n  var isLoggingIn = document.location.href.indexOf(\"code=\") > -1;\r\n  useEffect(() => {\r\n    // SocketClient.getInstance().send(\"status\", { token: api_token });\r\n    if (!socket.loggedIn && isLoggingIn) {\r\n      if (document.location.href.includes(\"code=\")) {\r\n        var params = document.location.href.split(\"code=\")[1].split(\"#\")[0];\r\n\r\n        // if url has code, display the dot loader\r\n        setLoginattempt(true);\r\n        dispatch({ type: \"OAUTH_CODE\", response: params });\r\n        (async () => {\r\n          await SocketClient.getInstance().send(\"oauth\", {\r\n            params: params,\r\n            tabId: \"\",\r\n          });\r\n          console.log(\"send status after oauth\");\r\n          await SocketClient.getInstance().send(\"status\", {\r\n            token: api_token,\r\n            id: socket.user.id,\r\n          });\r\n          console.log(\"status afcode\", params);\r\n          await SocketClient.getInstance().send(\"status\", {\r\n            token: api_token,\r\n            id: socket.user.id,\r\n          });\r\n        })();\r\n      }\r\n    } else if (socket.loggedIn) {\r\n      // alert()\r\n      SocketClient.getInstance().send(\"status\", {\r\n        token: api_token,\r\n        id: socket.user.id,\r\n      });\r\n    }\r\n    // else {\r\n    //   SocketClient.getInstance().send(\"status\", { token: api_token });\r\n    // }\r\n\r\n    if (socket && socket.isLoggingIn) {\r\n      alert(\"loggedin\");\r\n      SocketClient.getInstance().send(\"status\", {\r\n        token: api_token,\r\n        id: socket.user.id,\r\n      });\r\n      window.location = Config.Config.REDIRECT_URI;\r\n    }\r\n  }, []);\r\n  const logout = () => {\r\n    localStorage.removeItem(\"loggedIn\");\r\n    localStorage.removeItem(\"user\");\r\n    localStorage.removeItem(\"access_token\");\r\n    localStorage.removeItem(\"status\");\r\n    window.location.reload();\r\n  };\r\n  const oauthLoader = () => {\r\n    setLoginattempt(true);\r\n    // dispatch({ type: \"SET_STAGE\", response: \"oauth\" });\r\n  };\r\n\r\n  return (\r\n    <div class=\"container\">\r\n      {/* <div class=\"section\">\r\n        <h1 class=\"section-title\"> Validate Emails</h1>\r\n      </div> */}\r\n\r\n      <div class=\"agileits-top\">\r\n        {socket.loggedIn ? (\r\n          <div>\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-5 \">\r\n                <Credit />\r\n              </div>\r\n              <div class=\"col-sm-1\"></div>\r\n              <div class=\"col-sm-6 \">\r\n                <Scan />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            {loginattempt ? (\r\n              <div style={{ display: \"flex\" }}>\r\n                <h3 style={{ margin: \"auto 20px \" }}> Connecting Pipedrive</h3>\r\n                <span>\r\n                  <Loader\r\n                    type=\"ThreeDots\"\r\n                    color=\"#2BAD60\"\r\n                    height=\"80\"\r\n                    width=\"80\"\r\n                  />\r\n                </span>\r\n              </div>\r\n            ) : (\r\n              <div class=\"box\">\r\n                <a\r\n                  target=\"blank\"\r\n                  // href=\"https://oauth.pipedrive.com/oauth/authorize?client_id=67c7097db1c334ad&amp;redirect_uri=https://localhost:3000\"\r\n                  href=\"https://oauth.pipedrive.com/oauth/authorize?client_id=67c7097db1c334ad&amp;redirect_uri=https://server.certalink.com\"\r\n                >\r\n                  <button class=\"loginButton\" onClick={oauthLoader}>\r\n                    Connect to Pipedrive\r\n                  </button>\r\n                </a>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n// href=\"https://oauth.pipedrive.com/oauth/authorize?client_id=67c7097db1c334ad&amp;redirect_uri=https://localhost:3000\"\r\n\r\n// href=\"https://oauth.pipedrive.com/oauth/authorize?client_id=67c7097db1c334ad&amp;redirect_uri=https://server.certalink.com\"\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport SocketClient from \"../utils/socketClient\";\r\nimport Home from \"./home/index\";\r\nimport './styles/style.css'\r\nconst Config = require(\"../utils/config\");\r\nconst api_token = \"cc638af3ea2783059aae7e32b5b80e34c1f0d1f4\";\r\n\r\n\r\nconst Main = ({ props }) => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // Send the dispatch object to SocketClient Class\r\n    SocketClient.getInstance().initWithDispatch(dispatch);\r\n    SocketClient.getInstance().addEventListener(\r\n      SocketClient.EVENT.MESSAGE,\r\n      function (event) {\r\n        const message = JSON.parse(event.data);\r\n        console.log(\"SOCKET MESSAGE\", message);\r\n        switch (message.type) {\r\n          case \"error\":\r\n            dispatch({ type: \"ERROR\", response: message.data });\r\n            break;\r\n          case \"payment\":\r\n            // message.data.secret\r\n            console.log(\"loggedin\", message.data.secret);\r\n            dispatch({ type: \"PAYMENT\", response: message.data.secret });\r\n            break;\r\n\r\n          case \"loggedin\":\r\n            console.log(\"loggedin\", message.data.auth);\r\n            localStorage.setItem(\"user\", JSON.stringify(message.data.auth));\r\n            localStorage.setItem(\r\n              \"access_token\",\r\n              JSON.stringify(message.data.access_token)\r\n            );\r\n            localStorage.setItem(\"loggedIn\", true);\r\n            dispatch({ type: \"LOG_IN\", response: message.data });\r\n            window.location = Config.CONFIG.REDIRECT_URI;\r\n            break;\r\n          case \"testing\":\r\n            console.log(\"testing\", message.data);\r\n            // chrome.storage.local.set(message.data);\r\n            break;\r\n          case \"status\":\r\n            console.log(\"case status\", message.data);\r\n            localStorage.setItem(\"status\", JSON.stringify(message.data));\r\n            dispatch({ type: \"STATUS\", response: message.data });\r\n            break;\r\n          case \"update\":\r\n            console.log(\"update\", message.data);\r\n            if (message.data.state == \"payment\")\r\n              SocketClient.getInstance().send(\"status\", { token: api_token, id:socket.user.id });\r\n            // dispatch({ type: \"UPDATE_CREDIT\", response: message.data.credits });\r\n            else if(message.data.validateProcessing) {\r\n              dispatch({ type: \"VALIDATE_PROCESS\", response: message.data});\r\n            }\r\n            else dispatch({ type: \"SET_STAGE\", response: message.data.state });\r\n            \r\n            \r\n\r\n            // #1 case validate include validateProcessing :{\r\n            // status: fileInfo.file_status,\r\n            // percent : fileInfo.complete_percentage\r\n          \r\n            // localStorage.setItem('status',JSON.stringify(message.data));\r\n            // dispatch({type:'STATUS', response: message.data})\r\n            break;\r\n          case \"file\":\r\n            {\r\n              // create virtual download link\r\n              console.log(message.data);\r\n              const url =\r\n                \"data:text/csv;charset=utf-8,\" +\r\n                encodeURIComponent(message.data);\r\n              const virtualDowloadLink = document.createElement(\"a\");\r\n              virtualDowloadLink.href = url;\r\n              virtualDowloadLink.download = \"test.csv\";\r\n              document.body.appendChild(virtualDowloadLink);\r\n              // make click\r\n              virtualDowloadLink.click();\r\n              // delete\r\n              setTimeout(() => {\r\n                document.body.removeChild(virtualDowloadLink);\r\n              }, 0);\r\n            }\r\n            break;\r\n        }\r\n      }\r\n    );\r\n  }, []);\r\n  // const webEth = useSelector((state) => state.webEth);\r\n  const socket = useSelector((state) => state.socket);\r\n  // if (socket.loggedIn) {\r\n  //       console.log(\"socket connection in main.js\", socket.connection, { token: api_token, id:socket.user.id })\r\n  //       SocketClient.getInstance().send(\"status\", { token: api_token, id:socket.user.id });\r\n  //     console.log(\"socket connection\", socket);\r\n  // }\r\n  return (\r\n    <div class=\"container\">\r\n      <div class=\"main-w3layouts wrapper\">{socket.connection ? <Home /> : <h1>Connecting...</h1>}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\n// import RepList from \" ./rep/rep-list.js\"\r\n// import RepList from \"./rep/reps\"\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <div>\r\n        profile page\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default Profile;","import React, {Component} from 'react'\r\nconst About =({props}) => {\r\n\r\n\r\n    return (\r\n          <p>\r\n          </p>\r\n    )\r\n}\r\nexport default About","import React from 'react'\r\n//Routes\r\n// import NotFound from './components/shared/NotFound'\r\nimport App from './App';\r\nimport Home from './components/home/index';\r\nimport Main from './components/main';\r\nimport Profile from './components/profile';\r\nimport About from './components/about';\r\n// import AuthError from './components/shared/AuthError';\r\n\r\n//React-router\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\n// //Private Routes\r\n// const PrivateRoute = ({ component, ...rest }) => (\r\n//   <Route {...rest}\r\n//     render={props => (\r\n//               auth.loggedIn() ?\r\n//                 React.createElement(component, props) :\r\n//                 <Redirect\r\n//                   to={{ pathname: '/auth/error',\r\n//                         state: { from: props.location }\r\n//                      }}\r\n//                 />\r\n//             )\r\n//           }\r\n//   />\r\n// )\r\n\r\nconst Routes = () => {\r\n  return (\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Main} />\r\n        <Route path=\"/about\" exact component={About} />\r\n        {/* <Route path=\"pages/profile/\" exact component={Profile} user={this.state.getThisUser} /> */}\r\n        <Route path=\"/pages/profile/\" exact component={Profile} />\r\n        \r\n        {/* <Route path=\"/pages/messages\" exact component={Messages} /> */}\r\n        {/* <PrivateRoute path=\"pages/private\" exact component={Private} /> */}\r\n        {/* <Route component={NotFound} /> */}\r\n        {/* <Route path=\"/pages/signup\" exact component={SignUp} /> */}\r\n        <Redirect exact to=\"/\" />\r\n      </Switch>\r\n    \r\n  )\r\n}\r\n\r\nexport default Routes\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\nimport Routes from \"./routes\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport NavBar from \"./components/header/Navbar\";\r\n\r\nimport SocketClient from \"./utils/socketClient\";\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      storage: 0,\r\n      web3: null,\r\n      accounts: null,\r\n      incidents: null,\r\n      crowdsale: null,\r\n      fund: null,\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    // console.log(this.webEth)\r\n    // SocketClient.getInstance().connect(\"ws://127.0.0.1:8888\");\r\n    // SocketClient.getInstance().connect('ws://104.248.2.159:7777');\r\n    // SocketClient.getInstance().connect('wss://server.certalink.com/emailvalidator');\r\n    SocketClient.getInstance().connect('wss://server.certalink.com/ev_server');\r\n\r\n  };\r\n\r\n  render() {\r\n    // const isOpen = true;\r\n    // let content;\r\n    // content = <NavBar />;\r\n    return (\r\n      <div>\r\n        {/* <NavBar /> */}\r\n        <main>\r\n          <Routes />\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// import { initialState } from '../constants/initialState';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport SocketClient from \"../utils/socketClient\";\r\nvar loggedIn = localStorage.getItem(\"loggedIn\");\r\nvar user = loggedIn ? JSON.parse(localStorage.getItem(\"user\")) : {};\r\nvar status = loggedIn ? JSON.parse(localStorage.getItem(\"status\")) : {};\r\nvar access_token = loggedIn\r\n  ? JSON.parse(localStorage.getItem(\"access_token\"))\r\n  : \"\";\r\nconst initialState = {\r\n  connection: false,\r\n  code: \"\",\r\n  //   loggedIn: false,\r\n  //   user: '',\r\n  credits: status ? status.credits : 0,\r\n  loggedIn: loggedIn,\r\n  user: user,\r\n  status: status,\r\n  access_token: access_token,\r\n  stage: \"selected\",\r\n  validateProcessing: {\r\n    status: \"Queued\",\r\n    percent: \"0%\",\r\n  },\r\n};\r\n\r\nexport const socket = (state = initialState, action) => {\r\n  const { type, response } = action;\r\n  switch (type) {\r\n    case \"SOCKET_CONNECTION\":\r\n      console.log(\"socket connect res\", response);\r\n      return {\r\n        ...state,\r\n        // socket: response,\r\n        connection: response,\r\n      };\r\n    case \"OAUTH_CODE\":\r\n      return {\r\n        ...state,\r\n        // socket: response,\r\n        code: response,\r\n      };\r\n    case \"SCANNING\":\r\n      return {\r\n        ...state,\r\n        // socket: response,\r\n        stage: \"scanning\",\r\n      };\r\n    case \"PAYMENT\":\r\n      return {\r\n        ...state,\r\n        // socket: response,\r\n        payment_secret: response,\r\n      };\r\n\r\n    case \"SET_STAGE\":\r\n      console.log(\"update\", response);\r\n      return {\r\n        ...state,\r\n        // socket: response,\r\n        stage: response,\r\n        // validateProcessing: response.validateProcessing.status?validateProcessing.status:'Processing'\r\n      };\r\n    case \"VALIDATE_PROCESS\":\r\n    \r\n      if (response.validateProcessing) {\r\n        console.log(\"validateProcessing-----\", response);\r\n        return {\r\n          ...state,\r\n          // socket: response,\r\n          stage: response.state,\r\n          validateProcessing: response.validateProcessing,\r\n        };\r\n      }\r\n      // else{\r\n      //   console.log(\"updateProcessing-----\", response);\r\n      //   return {\r\n      //     ...state,\r\n      //     // socket: response,\r\n      //     stage: response.state,\r\n      //     updateProcessing: response.updateProcessing,\r\n      //   };\r\n      // }\r\n\r\n    case \"SET_VALIDATE\":\r\n      console.log(\"validate\", response);\r\n      return {\r\n        ...state,\r\n        scanned_persons: response.scanned_persons,\r\n        scanned_emails: response.scanned_emails,\r\n        csv: response.csv,\r\n        idToEmail: response.idToEmail,\r\n        email: response.email,\r\n      };\r\n    case \"LOG_IN\":\r\n      loggedIn = localStorage.getItem(\"loggedIn\");\r\n      user = loggedIn ? JSON.parse(localStorage.getItem(\"user\")) : {};\r\n      access_token = loggedIn\r\n        ? JSON.parse(localStorage.getItem(\"access_token\"))\r\n        : \"\";\r\n      return {\r\n        ...state,\r\n        // loggedIn: true,\r\n        // user: response.auth,\r\n        // socket: response,\r\n        loggedIn: loggedIn,\r\n        user: user,\r\n        access_token: access_token,\r\n      };\r\n    case \"STATUS\":\r\n      status = loggedIn ? JSON.parse(localStorage.getItem(\"status\")) : {};\r\n      return {\r\n        ...state,\r\n        // loggedIn: true,\r\n        // user: response.auth,\r\n        // socket: response,\r\n        credits: status.credits,\r\n      };\r\n    case \"UPDATE_CREDIT\":\r\n      return {\r\n        ...state,\r\n      };\r\n    case \"INITILIZE_WEB3\":\r\n      return {\r\n        ...state,\r\n        web3: response,\r\n      };\r\n    case \"WEB3_GET_ACCOUNTS\":\r\n      return {\r\n        ...state,\r\n        accounts: response,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport {socket} from './socketReducer'\r\nconst rootReducer = combineReducers({\r\n    socket: socket,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { Router, Route } from 'react-router-dom';\r\nimport * as history from 'history';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\nimport rootReducer from './reducers'\r\nconst store = createStore(rootReducer)\r\nconst userHistory = history.createBrowserHistory();\r\nReactDOM.render(\r\n    <Provider store = {store}>\r\n        <Router history={userHistory}>\r\n            <Route component={App} />\r\n        </Router>\r\n    </Provider>,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}